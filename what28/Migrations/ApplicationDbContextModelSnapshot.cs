// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using what28.Data;

#nullable disable

namespace what28.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("what28.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("what28.Models.DeliverPost", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("OpenAmount")
                        .HasColumnType("int");

                    b.Property<int?>("PosterId")
                        .HasColumnType("int");

                    b.Property<string>("Restaurant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("PosterId");

                    b.ToTable("DeliverPosts");
                });

            modelBuilder.Entity("what28.Models.EaterPost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Duration")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EaterPosts");
                });

            modelBuilder.Entity("what28.Models.EaterPostAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("EaterPostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("EaterPostId");

                    b.ToTable("EaterPostAccount");
                });

            modelBuilder.Entity("what28.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DeliverPostId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Menu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrdererId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DeliverPostId");

                    b.HasIndex("OrdererId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("what28.Models.DeliverPost", b =>
                {
                    b.HasOne("what28.Models.Account", "Poster")
                        .WithMany("DeliverPosts")
                        .HasForeignKey("PosterId");

                    b.Navigation("Poster");
                });

            modelBuilder.Entity("what28.Models.EaterPostAccount", b =>
                {
                    b.HasOne("what28.Models.Account", "Buyer")
                        .WithMany("EaterPostAccounts")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("what28.Models.EaterPost", "EaterPost")
                        .WithMany("EaterPostAccounts")
                        .HasForeignKey("EaterPostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Buyer");

                    b.Navigation("EaterPost");
                });

            modelBuilder.Entity("what28.Models.Order", b =>
                {
                    b.HasOne("what28.Models.DeliverPost", "DeliverPost")
                        .WithMany("Orderers")
                        .HasForeignKey("DeliverPostId");

                    b.HasOne("what28.Models.Account", "Orderer")
                        .WithMany("Orders")
                        .HasForeignKey("OrdererId");

                    b.Navigation("DeliverPost");

                    b.Navigation("Orderer");
                });

            modelBuilder.Entity("what28.Models.Account", b =>
                {
                    b.Navigation("DeliverPosts");

                    b.Navigation("EaterPostAccounts");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("what28.Models.DeliverPost", b =>
                {
                    b.Navigation("Orderers");
                });

            modelBuilder.Entity("what28.Models.EaterPost", b =>
                {
                    b.Navigation("EaterPostAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
